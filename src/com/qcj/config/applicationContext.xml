<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 1.创建目标类对象-->
    <bean id="userService" class="com.qcj.service.impl.UserServiceImpl"/>
    <!-- 2.创建增强代码类对象-->
    <bean id="myAspect" class="com.qcj.aspect.MyAspect"/>
    <!-- 3.aop织入增强代码
        配置aop命名空间
        proxy-target-class:true代表强制使用cglib动态代理
    -->
    <aop:config>
        <!--切入点：找方法  id:切入点标示  expression:表达式
            表达式格式：exection(访问修饰符，包名，类名，方法名（参数列表）)  唯一确定找到某个具体方法
            *代表所有都可以  ..代表任意参数
            execution(* com.qcj.service.impl.UserServiceImpl.*(..))
            service..*(..) service包下所有类所有方法
        -->
        <aop:pointcut id="myPointCut" expression="execution(* com.qcj.service.impl.UserServiceImpl.addUser(..))"/>
        <!-- 配置切面：增强代码 + 切入点
            ref:增强代码对象
        -->
        <aop:aspect ref="myAspect">
            <!--前置增强 :method:myaspect中的before()方法作为前置方法放在mypointCut上-->
            <aop:before method="before" pointcut-ref="myPointCut"/>
            <!--后置增强-->
            <aop:after-returning method="after" pointcut-ref="myPointCut"/>
        </aop:aspect>
    </aop:config>
</beans>